name: windows-exe
on:
  push:
    paths:
      - "native/windows/**"
      - ".github/workflows/windows-exe.yml"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure (CMake)
        run: cmake -S native/windows -B build -A x64
      - name: Build (Release)
        run: cmake --build build --config Release --verbose

      - name: Prepare artifact in repo
        shell: pwsh
        env:
          SHORT_SHA: ${{ github.sha }}
        run: |
          New-Item -ItemType Directory -Force -Path bin\windows | Out-Null
          $short = $env:SHORT_SHA.Substring(0,7)
          $dest = "bin/windows/pistream_gdi-$short.exe"
          if (Get-ChildItem build/Release/*.exe -ErrorAction SilentlyContinue) {
            Copy-Item build/Release/*.exe $dest -Force
          } elseif (Get-ChildItem build/*.exe -ErrorAction SilentlyContinue) {
            Copy-Item build/*.exe $dest -Force
          } else {
            Write-Error "No EXE found"
          }

      - name: Commit EXE into repo
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "ci: add Windows EXE (${{ github.sha }}) [skip ci]"
          file_pattern: bin/windows/*.exe

      - name: Upload EXE artifact
        uses: actions/upload-artifact@v4
        with:
          name: pistream-exe-beta
          path: |
            build/Release/*.exe
            build/*.exe

      - name: Publish to GitHub Releases (beta)
        uses: ncipollo/release-action@v1
        with:
          tag: beta
          name: PiStream Beta
          body: |
            Automated beta release containing Windows EXE build.
            This release is updated by CI on each run.
          prerelease: true
          allowUpdates: true
          makeLatest: false
          artifacts: |
            build/Release/*.exe
            build/*.exe
